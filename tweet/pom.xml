<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.example</groupId>
		<artifactId>microservices-parent</artifactId>
		<version>1.0.0</version>
	</parent>
	<groupId>com.tweet</groupId>
	<artifactId>tweet</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>tweet</name>
	<description>Tweet Microservice</description>


	<properties>
		<java.version>17</java.version>
		<spring-cloud.version>2022.0.4</spring-cloud.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<sonar.projectKey>tweet</sonar.projectKey>
		<sonar.projectName>tweet</sonar.projectName>
		<sonar.coverage.exclusions>
			src/main/java/com/tweet/tweet/controller/**,src/main/java/com/tweet/tweet/dto/**,src/main/java/com/tweet/tweet/utility/**,src/main/java/com/tweet/tweet/entity/**,src/main/java/com/tweet/tweet/repository/**,src/main/java/com/tweet/tweet/exception/**,src/main/java/com/tweet/tweet/service/**,src/main/java/com/tweet/tweet/TweetApplication*</sonar.coverage.exclusions>

		<sonar.qualitygate.wait>true</sonar.qualitygate.wait>
		<sonar.qualitygate.failOnSonarQubeExitCode>true</sonar.qualitygate.failOnSonarQubeExitCode>


		<sonar.java.binaries>${project.basedir}\target\classes</sonar.java.binaries>

		<sonar.sources>src/main/java</sonar.sources>
		<sonar.tests>src/test/java</sonar.tests>
		<sonar.java.binaries>target/classes</sonar.java.binaries>
		<sonar.junit.reportsPath>target/surefire-reports</sonar.junit.reportsPath>

		<sonar.coverage.jacoco.xmlReportPaths>target/jacoco-ut/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>

	</properties>


	<dependencyManagement>

		<dependencies>

			<dependency>

				<groupId>org.springframework.cloud</groupId>

				<artifactId>spring-cloud-dependencies</artifactId>

				<version>${spring-cloud.version}</version>

				<type>pom</type>

				<scope>import</scope>

			</dependency>

		</dependencies>

	</dependencyManagement>


	<dependencies>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-actuator</artifactId>

			<exclusions>

				<exclusion>

					<groupId>org.springframework.boot</groupId>

					<artifactId>spring-boot-starter-logging</artifactId>

				</exclusion>

			</exclusions>

		</dependency>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-data-jpa</artifactId>

		</dependency>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-web</artifactId>

			<exclusions>

				<exclusion>

					<groupId>org.springframework.boot</groupId>

					<artifactId>spring-boot-starter-logging</artifactId>

				</exclusion>

			</exclusions>

		</dependency>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-log4j2</artifactId>

		</dependency>

		<dependency>

			<groupId>org.springframework.cloud</groupId>

			<artifactId>spring-cloud-starter-consul-discovery</artifactId>

		</dependency>

		<dependency>

			<groupId>io.github.resilience4j</groupId>

			<artifactId>resilience4j-spring-boot2</artifactId>

		</dependency>

		<dependency>

			<groupId>org.springframework.cloud</groupId>

			<artifactId>spring-cloud-starter-loadbalancer</artifactId>

		</dependency>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-devtools</artifactId>

			<scope>runtime</scope>

			<optional>true</optional>

		</dependency>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-aop</artifactId>

		</dependency>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-validation</artifactId>

		</dependency>

		<dependency>

			<groupId>mysql</groupId>

			<artifactId>mysql-connector-java</artifactId>

			<version>8.0.33</version>

		</dependency>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-test</artifactId>

			<scope>test</scope>

		</dependency>

		<dependency>

			<groupId>org.springframework.boot</groupId>

			<artifactId>spring-boot-starter-webflux</artifactId>

		</dependency>

		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.4.4</version>
		</dependency>


	</dependencies>


	<build>
		<plugins>
			<!-- used to package and run Spring Boot applications-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!--used to execute unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<failIfNoTests>true</failIfNoTests>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>

			<!-- PMD plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.22.0</version>
				<configuration>
					<excludes></excludes>
					<rulesets>
						<ruleset>${project.basedir}/RuleSet.xml</ruleset>
					</rulesets>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Code Coverage Plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<configuration>
					<excludes>
						<exclude>**/com/tweet/tweet/controller/**</exclude>
						<exclude>**/com/tweet/tweet/dto/**</exclude>
						<exclude>**/com/tweet/tweet/utility/**</exclude>
						<exclude>**/com/tweet/tweet/entity/**</exclude>
						<exclude>**/com/tweet/tweet/repository/**</exclude>
						<exclude>**/com/tweet/tweet/TweetApplication*</exclude>
						<exclude>**/com/tweet/tweet/exception/**</exclude>
						<exclude>**/com/tweet/tweet/service/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>CLASS</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.8</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- Sonar plugin -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>4.0.0.4121</version>
			</plugin>
		</plugins>
	</build>

	<!-- Deploying to Artifactory -->
	<distributionManagement>
		<repository>
			<id>central</id>
			<name>infyartifactory-artifactory-primary-1-releases</name>
			<url>https://infyartifactory.jfrog.io/artifactory/eta-java-artifacts</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>infyartifactory-artifactory-primary-1-snapshots</name>
			<url>https://infyartifactory.jfrog.io/artifactory/eta-java-artifacts</url>
		</snapshotRepository>
	</distributionManagement>


</project>

